apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: mmontes-dev
  labels:
    app: mmontes-dev
    tier: reverse-proxy
spec:
  selector:
    matchLabels:
      app: mmontes-dev
      tier: reverse-proxy
  template:
    metadata:
      labels:
        app: mmontes-dev
        tier: reverse-proxy
    spec:
      containers:
        - name: nginx
          image: linuxserver/letsencrypt
          imagePullPolicy: Always
          resources:
            requests:
              memory: 64Mi
              cpu: 125m
            limits:
              memory: 128Mi
              cpu: 250m
          ports:
            - containerPort: 443
              name: https
            - containerPort: 80
              name: http
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          envFrom:
            - configMapRef:
                name: nginx
            - secretRef:
                name: nginx
          volumeMounts:
            - name: config
              mountPath: /config
            - name: proxy-confs
              mountPath: /config/nginx/proxy-confs
      initContainers:
        - name: init-nginx
          image: busybox
          command:
            - /bin/sh
            - -c
            - |
              wget -O /workdir/github-explorer.subdomain.conf https://raw.githubusercontent.com/mmontes11/mmontes-dev/master/config/nginx/github-explorer.subdomain.conf
              wget -O /workdir/grafana.subdomain.conf https://raw.githubusercontent.com/mmontes11/mmontes-dev/master/config/nginx/grafana.subdomain.conf
              wget -O /workdir/iot.subdomain.conf https://raw.githubusercontent.com/mmontes11/mmontes-dev/master/config/nginx/iot.subdomain.conf
              wget -O /workdir/kubernetes.subdomain.conf https://raw.githubusercontent.com/mmontes11/mmontes-dev/master/config/nginx/kubernetes.subdomain.conf
              wget -O /workdir/www.subdomain.conf https://raw.githubusercontent.com/mmontes11/mmontes-dev/master/config/nginx/www.subdomain.conf
          volumeMounts:
            - name: proxy-confs
              mountPath: /workdir
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: nginx
        - name: proxy-confs
          emptyDir: {}
